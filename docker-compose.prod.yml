version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-prod
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/musti_prod
      - PORT=5000
      - CORS_ORIGIN=${FRONTEND_URL:-https://yourdomain.com}
      - FRONTEND_URL=${FRONTEND_URL:-https://yourdomain.com}
    volumes:
      - uploads_data:/usr/src/app/public/uploads
    depends_on:
      mongodb:
        condition: service_started
    networks:
      - app-network
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${API_URL:-https://api.yourdomain.com}
        NODE_ENV: production
    container_name: frontend-prod
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${API_URL:-https://api.yourdomain.com}
    networks:
      - app-network
    restart: always
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: always
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-prod
    volumes:
      - mongodb_prod_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-securepassword}
    networks:
      - app-network
    restart: always
    command: ["--auth", "--bind_ip", "0.0.0.0"]

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_prod_data:
  uploads_data:
