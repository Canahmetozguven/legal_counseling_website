version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/musti
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
      - ./backend/public/uploads:/usr/src/app/public/uploads
    depends_on:
      mongodb:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - NODE_ENV=development
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

  init-users:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: sh -c "sleep 10 && node scripts/init-users.js"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/musti
    depends_on:
      - mongodb
      - backend
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    command: ["--bind_ip", "0.0.0.0"]

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
